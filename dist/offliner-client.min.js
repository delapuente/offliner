!function(e){"use strict";var n=1,t=e.off,r=function(){var e=new URL(document.currentScript.dataset.root||"",window.location.origin).href;return e.endsWith("/")?e:e+"/"}(),i=r+(document.currentScript.dataset.worker||"offliner-worker.js");e.off={_eventListeners:{},_xpromises:{},restore:function(){return e.off=t,this},install:function(){return"serviceWorker"in navigator?navigator.serviceWorker.register(i,{scope:r}).then(function(e){return this.connect().then(function(){return e})}.bind(this)):Promise.reject(new Error("serviceworkers-not-supported"))},_connecting:null,connect:function(){return this._connecting||(this._connecting=this._connect()),this._connecting},_connect:function(){if(!("serviceWorker"in navigator))return Promise.reject(new Error("serviceworkers-not-supported"));var e=this._installMessageHandlers.bind(this),n=this._checkForActivationPending.bind(this);return new Promise(function(t,i){navigator.serviceWorker.getRegistration(r).then(function(r){if(r.active)return e(),n(),t();var s=r.installing;return s?void(s.onstatechange=function(){"installed"===s.state&&(e(),n(),t())}):i(new Error("impossible-to-connect"))})})},on:function(e,n,t){this._has(e,n,t)||(this._eventListeners[e]=this._eventListeners[e]||[],this._eventListeners[e].push([n,t]))},update:function(){return this._xpromise("update")},activate:function(){return this._xpromise("activate")},_runListeners:function(e,n){var t=this._eventListeners[e]||[];t.forEach(function(e){var t=e[0],r=e[1];t.call(r,n)})},_installMessageHandlers:function s(){function e(e){var t=e.data,r=t?t.type:"",i=r.split(":");"offliner"===i[0]&&n._handleMessage(i[1],t)}var n=this;if(!s.done){if("function"==typeof BroadcastChannel){var t=new BroadcastChannel("offliner-channel");t.onmessage=e}else navigator.serviceWorker.addEventListener("message",e);s.done=!0}},_checkForActivationPending:function(){this._send({type:"checkForActivationPending"})},_handleMessage:function(e,n){navigator.serviceWorker;"xpromise"===e?this._resolveCrossPromise(n):this._runListeners(e,n)},_has:function(e,n,t){for(var r,i=this._eventListeners[e]||[],s=0;r=i[s];s++)if(r[0]===n&&r[1]===t)return!0;return!1},_xpromise:function(e){return new Promise(function(t,r){function i(e){r(new Error(e))}var s=n++,o={type:"xpromise",id:s,order:e};this._xpromises[s]=[t,i],this._send(o)}.bind(this))},_send:function(e){navigator.serviceWorker.getRegistration(r).then(function(n){return n&&n.active?n.active.postMessage(e):void console.warn("Not service worker active right now.")})},_resolveCrossPromise:function(e){var n=this._xpromises[e.id];n?n["rejected"===e.status?1:0](e.value):console.warn("Trying to resolve unexistent promise:",e.id)}}}(this.exports||this);